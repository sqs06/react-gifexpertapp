{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","setcategories","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAK,GAAC,OAAKH,GAAL,mBAAoBG,OACnCF,EAAc,MAKlB,SACI,uBACIM,KAAK,OACLC,MAAOR,EACPS,SApBc,SAACN,GACvB,IAAIK,EAAQL,EAAEO,OAAOF,MACrBP,EAAcO,S,+BCTTG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,0FAE4EC,UAAUH,GAFtF,sBAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,2DAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,SCHJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECFwB,SAACA,GAEzB,MAA0Bb,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAEGqB,EDjB0BK,CAAa1B,GAAjCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACI,qBAAIJ,UAAU,sDAAd,cAAsEhB,EAAtE,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aE2BtBgB,EAxCM,WAGjB,MAAoCxC,mBAAS,CAAC,cAA9C,mBAAOyC,EAAP,KAAmBC,EAAnB,KAOA,OACI,qCACI,8CAEA,cAAC,EAAD,CAAa3C,cAAe2C,IAC5B,uBAIA,6BAQQD,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MC3B7B8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.148104f8.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')//Error the component is changing\r\n\r\n    const handleInputChange = (e) => {\r\n        let value = e.target.value;\r\n        setInputValue(value);\r\n    }\r\n\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 1) {\r\n            // console.log('Submit hecho');\r\n            setCategories(e => [inputValue, ...e]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleOnSubmit}>\r\n            <input\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=HJYRlR75J6YiSjZp2c5N967v9jKDiepV&q=${encodeURI(category)}&limit=10`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn animate__delay-1s'>\r\n            <img src={url} alt={title}></img>\r\n            <p> {title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category);    \r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn animate__delay-1s'> {category} </h3>\r\n\r\n            { loading && <p className='animate__animated animate__flash'>Loading...</p>}\r\n\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        >\r\n                        </GifGridItem>\r\n                    ))\r\n                }\r\n\r\n                {/*Video 75 <h3> {count}</h3>\r\n            <button onClick={() => setCount(count + 1)}></button> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                // setTimeout(() => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n                // }, 5000);\r\n            });\r\n    }, [category])\r\n\r\n    return state; // {data: [], loading: true };\r\n\r\n}","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setcategories] = useState(['One piece']);\r\n\r\n    // const handleAdd = () => {                \r\n    //     // setcategories([...categories, 'New Hero']);\r\n    //     setcategories( cats => ['New Hero' ,...cats ]);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            {/* <AddCategory setcategories={setcategories}></AddCategory> */}\r\n            <AddCategory setCategories={setcategories}></AddCategory>   \r\n            <hr />\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    // <li>One Punch</li>\r\n                    // <li>Samurai X</li>\r\n                    // categories.map((category, i) => {\r\n                    //     return <li key={category}> {category} </li>\r\n                    // })\r\n                    //Video #73\r\n                    categories.map(category => \r\n                        <GifGrid \r\n                        key={category} \r\n                        category={category}></GifGrid>\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}